name: Rust

on:
  push:
    branches:
      - 'main'
      - '!gh-pages'
  pull_request:

env:
  CARGO_BUILD_TARGET_DIR: ${{ github.workspace }}/target

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: actions/checkout@v3
      - name: Rustup
        run: |
          rustup toolchain install nightly -c rustfmt
          rustup override set nightly

      - name: Rust toolchain info
        run: |
          rustc -Vv
          cargo -V
          rustup -V

      - name: Rustfmt
        run: cargo fmt --all -- --check
        if: runner.os == 'Linux'

      - name: Cache CARGO_HOME
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Get rustc commit hash
        id: cargo-target-cache
        run: |
          echo "::set-output name=rust_hash::$(rustc -Vv | grep commit-hash | awk '{print $2}')"

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-dir-${{ steps.cargo-target-cache.outputs.rust_hash }}-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo check

      - name: insall sdl for linux
        run: sudo apt-get install --no-install-recommends libsdl2-dev
        if: runner.os == 'Linux'

      - name: install sdl for windows
        shell: bash
        if: runner.os == 'Windows'
        run: |
          mkdir sdl-vendor
          cd sdl-vendor
          curl -O https://www.libsdl.org/release/SDL2-devel-2.0.14-VC.zip
          unzip SDL2-devel-2*.zip
          mkdir /c/Libs
          cp SDL2-2.0.*/lib/x64/*.lib '/c/Libs'
          echo LIB="C:\Libs" >> $GITHUB_ENV
          cp SDL2-2.0.*/lib/x64/*.dll ..

      - name: install sdl for mac
        if: runner.os == 'macOS'
        run: |
          brew install sdl2
          echo LIBRARY_PATH="$LIBRARY_PATH:/usr/local/lib" >> $GITHUB_ENV

      - run: cargo check --all
      - run: cargo build
      - run: cargo test
      - run: |
          cd interpreter
          cargo build
